name: Create a stable release
on:
  workflow_dispatch:
    inputs:
      discord_ipa_url:
        description: "Discord IPA URL"
        default: ""
        required: true
        type: string

jobs:
  build:
    name: Build and publish Enmity for iOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
          submodules: true

      - name: Check cache
        id: verify-cache
        run: |
          echo "heads=`git ls-remote https://github.com/theos/theos | head -n 1 | cut -f 1`-`git ls-remote https://github.com/theos/sdks | head -n 1 | cut -f 1`" >> $GITHUB_OUTPUT

      - name: Use cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/theos
          key: ${{ runner.os }}-${{ steps.verify-cache.outputs.heads }}

      - name: Prepare Theos
        uses: Randomblock1/theos-action@v1

      - name: Prepare Azule
        run : |
          git clone https://github.com/Al4ise/Azule ${{ github.workspace }}/Azule
          cd Azule
          git checkout 27c02b415cff15b1c131a0e95bcc2438023f86da

      - name: Prepare Enmity Patcher
        run : |
          curl -L https://github.com/enmity-mod/patcher/releases/latest/download/patcher.mac-amd64 -o ${{ github.workspace }}/patcher
          chmod +x patcher
      
      - name: Download Discord IPA
        run: |
          curl -L ${{ inputs.discord_ipa_url }} -o ${{ github.workspace }}/Discord.ipa
      
      - name: Extract Values
        run: |
          NAME=$(grep '^Name:' control | cut -d ' ' -f 2)
          PACKAGE=$(grep '^Package:' control | cut -d ' ' -f 2)
          VERSION=$(grep '^Version:' control | cut -d ' ' -f 2)
          DEB_FILE_NAME="${PACKAGE}_${VERSION}_iphoneos-arm.deb"
          echo "DEB_FILE_NAME=$DEB_FILE_NAME" >> $GITHUB_ENV
          ROOTLESS_DEB_FILE_NAME="${PACKAGE}_${VERSION}_iphoneos-arm64.deb"
          echo "ROOTLESS_DEB_FILE_NAME=$ROOTLESS_DEB_FILE_NAME" >> $GITHUB_ENV
          echo "APP_NAME=$NAME" >> $GITHUB_ENV

      - name: Patch Discord
        run : |
          ${{ github.workspace }}/patcher ${{ github.workspace }}/Discord.ipa
          mkdir out

      - name: Retrieve version
        id: version
        run: echo "__ENMITY_VERSION=$(cat control | grep -E 'Version:(.*)' | awk '{ print $2 }')" >> $GITHUB_OUTPUT

      - name: Build deb
        run: |
          rm -f packages/*
          gmake clean package FINALPACKAGE=1
          mv $(find packages -name "*.deb" -print -quit) out/Enmity.deb

      - name: Build dev deb
        run: |
          rm -f packages/*
          echo $"$(sed 's/Name\:.*/Name\: Enmity (Dev)/' control)" > control
          echo $"$(sed 's/Package\:.*/Package\: app.enmity.dev/' control)" > control
          gmake clean package FINALPACKAGE=1 DEVTOOLS=1
          mv $(find packages -name "*.deb" -print -quit) out/Enmity.Development.deb

      - name: Build deb with the sideload fix
        run: |
          rm -f packages/*
          gmake clean package FINALPACKAGE=1 SIDELOAD=1
          mv $(find packages -name "*.deb" -print -quit) out/Enmity.Sideload.deb

      - name: Build dev deb with the sideload fix
        run: |
          rm -f packages/*
          echo $"$(sed 's/Name\:.*/Name\: Enmity (Dev)/' control)" > control
          echo $"$(sed 's/Package\:.*/Package\: app.enmity.dev/' control)" > control
          gmake clean package FINALPACKAGE=1 DEVTOOLS=1 SIDELOAD=1
          mv $(find packages -name "*.deb" -print -quit) out/Enmity.Sideload.Development.deb

      - name: Build rootless deb
        run: |
          rm -f packages/*
          gmake clean package FINALPACKAGE=1 THEOS_PACKAGE_SCHEME=rootless
          mv $(find packages -name "*.deb" -print -quit) out/Enmity.Rootless.deb

      - name: Build dev rootless deb
        run: |
          rm -f packages/*
          echo $"$(sed 's/Name\:.*/Name\: Enmity (Dev)/' control)" > control
          echo $"$(sed 's/Package\:.*/Package\: app.enmity.dev/' control)" > control
          gmake clean package FINALPACKAGE=1 DEVTOOLS=1 THEOS_PACKAGE_SCHEME=rootless
          mv $(find packages -name "*.deb" -print -quit) out/Enmity.Rootless.Development.deb

      - name: Create Enmity.ipa
        run : |
          ${{ github.workspace }}/Azule/azule -U -i Enmity.ipa -o out -f out/Enmity.Sideload.deb
          mv out/Enmity+Enmity.Sideload.deb.ipa out/Enmity.ipa

      - name: Create Enmity.Dev.ipa
        run : |
          ${{ github.workspace }}/Azule/azule -U -i Enmity.ipa -o out -f out/Enmity.Sideload.Development.deb
          mv out/Enmity+Enmity.Sideload.Development.deb.ipa out/Enmity.Development.ipa

      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          draft: true
          automatic_release_tag: v${{ env.DISCORD_VERSION }}
          title: "Discord v${{ env.DISCORD_VERSION }} - Enmity v${{ steps.version.outputs.__ENMITY_VERSION }}"
          files: out/*
  app-repo:
    continue-on-error: true
    runs-on: macos-14
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract App Name
        run: |
          NAME=$(grep '^Name:' control | cut -d ' ' -f 2)
          echo "APP_NAME=$NAME" >> $GITHUB_ENV
      - name: Download IPA artifact
        uses: actions/download-artifact@v4
        with:
          name: ipa

      - name: Update app-repo.json
        run: |
          unzip -q ${{ env.APP_NAME }}.ipa
          VERSION=$(plutil -p Payload/Discord.app/Info.plist | grep CFBundleShortVersionString | cut -d '"' -f 4)
          DATE=$(date -u +"%Y-%m-%d")
          IPA_SIZE=$(ls -l ${{ env.APP_NAME }}.ipa | awk '{print $5}')
          DOWNLOAD_URL=https://github.com/${{ github.repository }}/releases/download/v$VERSION/${{ env.APP_NAME }}.ipa
          NEW_ENTRY=$(jq -n --arg version "$VERSION" --arg date "$DATE" --arg size "$IPA_SIZE" --arg downloadURL "$DOWNLOAD_URL" '{version: $version, date: $date, size: ($size | tonumber), downloadURL: $downloadURL}')
          jq --argjson newEntry "$NEW_ENTRY" '.apps[0].versions |= [$newEntry] + .' app-repo.json > temp.json && mv temp.json app-repo.json
        
      - uses: EndBug/add-and-commit@v9
        with:
          default_author: github_actions
          message: "chore: update app-repo.json"
          add: app-repo.json
